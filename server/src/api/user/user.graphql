type User {
  id: ID!
  username: String!
  email: String!
  createdAt: String!
  updatedAt: String!
  expenses: [Expense]!
}

type AuthenticatedUserPayload {
  user: User!
  token: String!
}

input NewUserInput {
  username: String!
  password: String!
  email: String!
}

input UserID {
  id: ID!
}

input LoginUserInput {
  email: String!
  password: String!
}

type Query {
  getUser(input: UserID!): User!
  getUsers: [User]!
}

type Mutation {
  signUp(input: NewUserInput!): User!
  login(input: LoginUserInput!): AuthenticatedUserPayload!
}
